import base64
import json
from pwn import *
from Crypto.Cipher import ChaCha20
from Crypto.Util.Padding import pad


key = b"..."  # you don't have this
token = "..." # from server

server = remote("130.192.5.212", 6521)

def xor_bytes(a, b):
    return bytes([x ^ y for x, y in zip(a, b)])



if __name__ == '__main__':
    name = b'AAAAAAAAAA'
    
    server.recvline()
    server.sendline(name)
    server.recvline()
    token = server.recvline().decode().strip().split(": ")[-1]

    nonce_b64, ct_b64 = token.split(".")
    nonce = base64.b64decode(nonce_b64)
    ct = bytearray(base64.b64decode(ct_b64))

    pt = '{"username": "AAAAAAAAAA"}'
    target = '{"admin": true}'  # or padded to match pt length

    delta = xor_bytes(pt.encode(), target.encode())
    
    forged_ct = xor_bytes(ct, delta)
    forged_token = f"{nonce_b64}.{base64.b64encode(forged_ct).decode()}"

    server.sendline(b"flag")
    server.sendline(forged_token.encode())
    server.interactive()
    server.close()

