from pwn import * 
import os
from Crypto.Cipher import AES
os.environ["PWNLIB_NOTERM"] = "True"
os.environ["PWNLIB_SILENT"] = "True"


HOST = "130.192.5.212"
PORT = 6531

BLOCK_SIZE = AES.block_size
BLOCK_SIZE_HEX = 2*BLOCK_SIZE

server = remote(HOST, PORT)

known_plaintext = b"A" * 32
for i in range(128):
    print("\n",server.recvline().decode(), end="")  # "Challenge #i"
    otp_bytes = bytes.fromhex(server.recvline().decode().strip().split()[-1])

    data_to_send = bytes([a ^ b for a, b in zip(known_plaintext, otp_bytes)])

    server.sendlineafter(b"Input: ", data_to_send.hex().encode())

    ciphertext_line = server.recvline().decode()
    ciphertext_hex = ciphertext_line.strip().split()[-1]
    ciphertext_bytes = bytes.fromhex(ciphertext_hex)

    # for i in range(0,int(len(ciphertext_hex)//BLOCK_SIZE_HEX)):
    #     print(ciphertext_hex[i*BLOCK_SIZE_HEX:(i+1)*BLOCK_SIZE_HEX])

    print("Selected mode is", end=' ')
    if ciphertext_bytes[:BLOCK_SIZE] == ciphertext_bytes[BLOCK_SIZE:2*BLOCK_SIZE]:
        print("ECB")
        mode = "ECB"
    else:
        print("CBC")
        mode = "CBC"

    server.sendlineafter(b'What mode did I use? (ECB, CBC)\n', mode.encode())
    received_data = server.recvline()

    print(received_data)


print(server.recv(1024))

server.close()
