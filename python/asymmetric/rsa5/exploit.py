from Crypto.Util.number import inverse
from pwn import *

HOST = "130.192.5.212"
PORT = 6645

e = 65537

server = remote(HOST, PORT)

# Assume these are printed by the oracle
n = int(server.recvline().strip().decode())
c = int(server.recvline().strip().decode())
print(f'n: {n}')
print(f'c: {c}')
# Choose a small s
s = 2
s_enc = pow(s, 65537, n)

# Multiply ciphertext
c2 = (c * s_enc) % n

# Send to oracle: input -> 'd' + str(c2)
server.sendline(f'd{c2}'.encode())

# Receive from oracle: m2 = m * s % n
m2 = int(server.recvline().strip().decode())

# Recover original m
s_inv = inverse(s, n)
m = (m2 * s_inv) % n

# Convert to bytes
flag = int.to_bytes(m, (m.bit_length() + 7) // 8, 'big')
print(flag.decode())
